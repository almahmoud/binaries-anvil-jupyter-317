+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''shinyMethyl'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://cloud.r-project.org
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'shinyMethyl'
also installing the dependencies ‘beanplot’, ‘nor1mix’, ‘mclust’, ‘reshape’, ‘quadprog’, ‘IlluminaHumanMethylation450kmanifest’, ‘IlluminaHumanMethylation450kanno.ilmn12.hg19’, ‘minfi’, ‘shinyMethylData’, ‘minfiData’

trying URL 'https://cloud.r-project.org/src/contrib/beanplot_1.3.1.tar.gz'
Content type 'application/x-gzip' length 307297 bytes (300 KB)
==================================================
downloaded 300 KB

trying URL 'https://cloud.r-project.org/src/contrib/nor1mix_1.3-0.tar.gz'
Content type 'application/x-gzip' length 45080 bytes (44 KB)
==================================================
downloaded 44 KB

trying URL 'https://cloud.r-project.org/src/contrib/mclust_6.0.0.tar.gz'
Content type 'application/x-gzip' length 2744043 bytes (2.6 MB)
==================================================
downloaded 2.6 MB

trying URL 'https://cloud.r-project.org/src/contrib/reshape_0.8.9.tar.gz'
Content type 'application/x-gzip' length 41843 bytes (40 KB)
==================================================
downloaded 40 KB

trying URL 'https://cloud.r-project.org/src/contrib/quadprog_1.5-8.tar.gz'
Content type 'application/x-gzip' length 36141 bytes (35 KB)
==================================================
downloaded 35 KB

trying URL 'https://bioconductor.org/packages/3.17/data/annotation/src/contrib/IlluminaHumanMethylation450kmanifest_0.4.0.tar.gz'
Content type 'application/x-gzip' length 8726870 bytes (8.3 MB)
==================================================
downloaded 8.3 MB

trying URL 'https://bioconductor.org/packages/3.17/data/annotation/src/contrib/IlluminaHumanMethylation450kanno.ilmn12.hg19_0.6.1.tar.gz'
Content type 'application/x-gzip' length 57892521 bytes (55.2 MB)
==================================================
downloaded 55.2 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/minfi_1.46.0.tar.gz'
Content type 'application/x-gzip' length 505198 bytes (493 KB)
==================================================
downloaded 493 KB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/shinyMethylData_1.20.0.tar.gz'
Content type 'application/x-gzip' length 37311970 bytes (35.6 MB)
==================================================
downloaded 35.6 MB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/minfiData_0.46.0.tar.gz'
Content type 'application/x-gzip' length 78181897 bytes (74.6 MB)
==================================================
downloaded 74.6 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/shinyMethyl_1.36.0.tar.gz'
Content type 'application/x-gzip' length 7577542 bytes (7.2 MB)
==================================================
downloaded 7.2 MB

* installing *source* package ‘beanplot’ ...
** package ‘beanplot’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘beanplot’ as ‘beanplot_1.3.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (beanplot)
* installing *source* package ‘nor1mix’ ...
** package ‘nor1mix’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘nor1mix’ as ‘nor1mix_1.3-0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (nor1mix)
* installing *source* package ‘mclust’ ...
** package ‘mclust’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C compiler: ‘gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0’
using Fortran compiler: ‘GNU Fortran (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0’
gfortran  -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong  -c dmvnorm.f -o dmvnorm.o
gcc -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c init.c -o init.o
gfortran  -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong  -c mclust.f -o mclust.o
gfortran  -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong  -c mclustaddson.f -o mclustaddson.o
gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o mclust.so dmvnorm.o init.o mclust.o mclustaddson.o -llapack -lblas -lgfortran -lm -lquadmath -lgfortran -lm -lquadmath -L/usr/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-mclust/00new/mclust/libs
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘mclust’ as ‘mclust_6.0.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (mclust)
* installing *source* package ‘reshape’ ...
** package ‘reshape’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘reshape’ as ‘reshape_0.8.9_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (reshape)
* installing *source* package ‘quadprog’ ...
** package ‘quadprog’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C compiler: ‘gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0’
using Fortran compiler: ‘GNU Fortran (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0’
gfortran  -fvisibility=hidden -fpic -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong -msse2 -mfpmath=sse   -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong  -c aind.f -o aind.o
gcc -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c init.c -o init.o
gfortran  -fvisibility=hidden -fpic -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong -msse2 -mfpmath=sse   -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong  -c solve.QP.compact.f -o solve.QP.compact.o
gfortran  -fvisibility=hidden -fpic -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong -msse2 -mfpmath=sse   -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong  -c solve.QP.f -o solve.QP.o
gfortran  -fvisibility=hidden -fpic -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong -msse2 -mfpmath=sse   -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong  -c util.f -o util.o
gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o quadprog.so aind.o init.o solve.QP.compact.o solve.QP.o util.o -lblas -lgfortran -lm -lquadmath -lgfortran -lm -lquadmath -L/usr/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-quadprog/00new/quadprog/libs
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘quadprog’ as ‘quadprog_1.5-8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (quadprog)
* installing *source* package ‘shinyMethylData’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘shinyMethylData’ as ‘shinyMethylData_1.20.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shinyMethylData)
* installing *source* package ‘minfi’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘minfi’ as ‘minfi_1.46.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (minfi)
* installing *source* package ‘IlluminaHumanMethylation450kmanifest’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘IlluminaHumanMethylation450kmanifest’ as ‘IlluminaHumanMethylation450kmanifest_0.4.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (IlluminaHumanMethylation450kmanifest)
* installing *source* package ‘IlluminaHumanMethylation450kanno.ilmn12.hg19’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘IlluminaHumanMethylation450kanno.ilmn12.hg19’ as ‘IlluminaHumanMethylation450kanno.ilmn12.hg19_0.6.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (IlluminaHumanMethylation450kanno.ilmn12.hg19)
* installing *source* package ‘shinyMethyl’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘shinyMethyl’ as ‘shinyMethyl_1.36.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shinyMethyl)
* installing *source* package ‘minfiData’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘minfiData’ as ‘minfiData_0.46.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (minfiData)

The downloaded source packages are in
	‘/tmp/Rtmpcz4x3z/downloaded_packages’
Old packages: 'AnnotationForge', 'IRanges', 'BiocManager', 'biomaRt', 'broom',
  'bslib', 'curl', 'DelayedMatrixStats', 'DESeq2', 'gargle', 'GenomeInfoDb',
  'GenomicFeatures', 'googledrive', 'googlesheets4', 'igraph', 'locfit',
  'MatrixGenerics', 'pkgbuild', 'RcppArmadillo', 'reticulate', 'scattermore',
  'Seurat', 'sp', 'sparseMatrixStats', 'testthat', 'usethis', 'vctrs'

real	5m31.974s
user	5m15.107s
sys	0m12.969s
* installing *source* package ‘shinyMethylData’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘shinyMethylData’ as ‘shinyMethylData_1.20.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shinyMethylData)
