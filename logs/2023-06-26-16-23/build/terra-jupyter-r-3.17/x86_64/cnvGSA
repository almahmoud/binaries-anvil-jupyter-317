+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''cnvGSA'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://cloud.r-project.org
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'cnvGSA'
also installing the dependencies ‘profileModel’, ‘brglm’, ‘splitstackshape’, ‘cnvGSAdata’

trying URL 'https://cloud.r-project.org/src/contrib/profileModel_0.6.1.tar.gz'
Content type 'application/x-gzip' length 21513 bytes (21 KB)
==================================================
downloaded 21 KB

trying URL 'https://cloud.r-project.org/src/contrib/brglm_0.7.2.tar.gz'
Content type 'application/x-gzip' length 27208 bytes (26 KB)
==================================================
downloaded 26 KB

trying URL 'https://cloud.r-project.org/src/contrib/splitstackshape_1.4.8.tar.gz'
Content type 'application/x-gzip' length 33972 bytes (33 KB)
==================================================
downloaded 33 KB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/cnvGSAdata_1.36.0.tar.gz'
Content type 'application/x-gzip' length 6537758 bytes (6.2 MB)
==================================================
downloaded 6.2 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/cnvGSA_1.44.0.tar.gz'
Content type 'application/x-gzip' length 265511 bytes (259 KB)
==================================================
downloaded 259 KB

* installing *source* package ‘profileModel’ ...
** package ‘profileModel’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘profileModel’ as ‘profileModel_0.6.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (profileModel)
* installing *source* package ‘splitstackshape’ ...
** package ‘splitstackshape’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘splitstackshape’ as ‘splitstackshape_1.4.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (splitstackshape)
* installing *source* package ‘brglm’ ...
** package ‘brglm’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C compiler: ‘gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0’
gcc -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c brglm_init.c -o brglm_init.o
gcc -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-cRDaP8/r-base-4.3.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c hats.c -o hats.o
gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o brglm.so brglm_init.o hats.o -L/usr/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-brglm/00new/brglm/libs
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘brglm’ as ‘brglm_0.7.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (brglm)
* installing *source* package ‘cnvGSA’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘cnvGSA’ as ‘cnvGSA_1.44.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (cnvGSA)
* installing *source* package ‘cnvGSAdata’ ...
** using staged installation
** data
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘cnvGSAdata’ as ‘cnvGSAdata_1.36.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (cnvGSAdata)

The downloaded source packages are in
	‘/tmp/Rtmpyc72N8/downloaded_packages’
Old packages: 'BiocManager', 'biomaRt', 'broom', 'bslib', 'curl',
  'DelayedMatrixStats', 'DESeq2', 'digest', 'gargle', 'GenomeInfoDb',
  'GenomicFeatures', 'googledrive', 'googlesheets4', 'igraph', 'IRanges',
  'locfit', 'MatrixGenerics', 'pbapply', 'pkgbuild', 'RcppArmadillo',
  'reticulate', 'scattermore', 'Seurat', 'sp', 'sparseMatrixStats',
  'spatstat.sparse', 'testthat', 'usethis', 'uwot', 'vctrs'

real	0m31.893s
user	0m27.474s
sys	0m3.611s
* installing *source* package ‘cnvGSAdata’ ...
** using staged installation
** data
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘cnvGSAdata’ as ‘cnvGSAdata_1.36.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (cnvGSAdata)
